// <auto-generated />
using System;
using Cwiczenia_6.Controllers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cwiczenia_6.Migrations
{
    [DbContext(typeof(MainDBContext))]
    [Migration("20210611213850_alteredData")]
    partial class alteredData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cwiczenia_6.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "j.brown@email.com",
                            FirstName = "John",
                            LastName = "Brown"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "a.white@email.com",
                            FirstName = "Andrew",
                            LastName = "White"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "w.anderson@email.com",
                            FirstName = "Walter",
                            LastName = "Anderson"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "m.handerson@email.com",
                            FirstName = "Mike",
                            LastName = "Handerson"
                        });
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Med1 Desc",
                            Name = "Med1",
                            Type = "pill"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Med2 Desc",
                            Name = "Med2",
                            Type = "cream"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Med3 Desc",
                            Name = "Med3",
                            Type = "vaccine"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "Med4 Desc",
                            Name = "Med4",
                            Type = "antibiotics"
                        });
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(1993, 10, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Jordan",
                            LastName = "Finney"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(1995, 12, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Gordon",
                            LastName = "Ramsey"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(2005, 6, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Morgan",
                            LastName = "Freewoman"
                        },
                        new
                        {
                            IdPatient = 4,
                            Birthdate = new DateTime(2018, 1, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Chris",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2021, 6, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(2420),
                            DueDate = new DateTime(2021, 8, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(4299),
                            IdDoctor = 1,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2021, 6, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7354),
                            DueDate = new DateTime(2021, 10, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7381),
                            IdDoctor = 2,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2021, 6, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7388),
                            DueDate = new DateTime(2021, 7, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7391),
                            IdDoctor = 1,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 4,
                            Date = new DateTime(2021, 6, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7400),
                            DueDate = new DateTime(2022, 2, 11, 23, 38, 48, 612, DateTimeKind.Local).AddTicks(7405),
                            IdDoctor = 4,
                            IdPatient = 4
                        });
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 2,
                            Details = "details of prescription_medicament nr 1"
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 1,
                            Details = "details of prescription_medicament nr 2",
                            Dose = 200
                        },
                        new
                        {
                            IdMedicament = 4,
                            IdPrescription = 3,
                            Details = "details of prescription_medicament nr 3",
                            Dose = 300
                        },
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 4,
                            Details = "details of prescription_medicament nr 4",
                            Dose = 30
                        });
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Prescription", b =>
                {
                    b.HasOne("Cwiczenia_6.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cwiczenia_6.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("Cwiczenia_6.Models.Prescription", "Prescription")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cwiczenia_6.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Medicament", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Cwiczenia_6.Models.Prescription", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
